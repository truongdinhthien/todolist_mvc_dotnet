@model TodoViewModel;


@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-controller="Todoes" asp-action="Index" method="get">
    <div class="form-row">
        <div class="form-group col-auto">
            <label asp-for="TodoStatusFilter" class="control-label"><b>Trạng thái</b></label>
            <select asp-for="TodoStatusFilter" asp-items="Html.GetEnumSelectList<TodoStatus>()" class="form-control">
                <option selected="selected" value="">All</option>
            </select>
        </div>

        <div class="form-group col-auto">
            <label asp-for="StartDateFilter" class="control-label"><b>Ngày bắt đầu</b></label>
            <input asp-for="StartDateFilter" class="form-control" />
        </div>

        <div class="form-group col-auto">
            <label asp-for="EndDateFilter" class="control-label"><b>Ngày kết thúc</b></label>
            <input asp-for="EndDateFilter" class="form-control" />
        </div>
        <div class="form-group col-auto d-flex align-items-end">
            <input type="submit" value="Filter" class="btn btn-primary" /> | <a asp-action="Index">Back to Full List</a>
        </div>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Todoes[0].Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Todoes[0].Content)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Todoes[0].Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Todoes[0].Scope)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Todoes[0].StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Todoes[0].DueDate)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Todoes)
        {
            var badge = $"badge badge-{item.Status.ToColor()}";
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Content)
                </td>
                <td>
                    <span class="@badge">@Html.DisplayFor(modelItem => item.Status)</span>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Scope)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DueDate)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.Todoes.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Todoes.HasNextPage ? "disabled" : "";
}

<nav aria-label="Page navigation example">
    <ul class="pagination">
        @{
            <li class="page-item @prevDisabled">
                <a class="page-link" asp-route-pageIndex="@(Model.Todoes.PageIndex - 1)" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                    <span class="sr-only">Previous</span>
                </a>
            </li>
            for (int i = 1; i <= Model.Todoes.TotalPages; i++)
            {
                if (Model.Todoes.PageIndex == i)
                {
                    <li class="page-item active"><a class="page-link" asp-route-pageIndex="@i">@i</a></li>
                }
                else
                {
                    <li class="page-item"><a class="page-link" asp-route-pageIndex="@i">@i</a></li>
                }

            }
            <li class="page-item @nextDisabled">
                <a class="page-link" asp-route-pageIndex="@(Model.Todoes.PageIndex + 1)" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                    <span class="sr-only">Next</span>
                </a>
            </li>
        }
    </ul>
</nav>
